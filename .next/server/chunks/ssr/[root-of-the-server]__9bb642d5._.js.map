{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/bhiupeshpatil/Downloads/Bhupesh/Webify/src/trpc/query-client.ts"],"sourcesContent":["import {\n    defaultShouldDehydrateQuery,\n    QueryClient,\n  } from '@tanstack/react-query';\n  import superjson from 'superjson';\n  export function makeQueryClient() {\n    return new QueryClient({\n      defaultOptions: {\n        queries: {\n          staleTime: 30 * 1000,\n        },\n        dehydrate: {\n          serializeData: superjson.serialize,\n          shouldDehydrateQuery: (query) =>\n            defaultShouldDehydrateQuery(query) ||\n            query.state.status === 'pending',\n        },\n        hydrate: {\n          deserializeData: superjson.deserialize,\n        },\n      },\n    });\n  }"],"names":[],"mappings":";;;AAAA;AAAA;AAIE;;;AACO,SAAS;IACd,OAAO,IAAI,6KAAA,CAAA,cAAW,CAAC;QACrB,gBAAgB;YACd,SAAS;gBACP,WAAW,KAAK;YAClB;YACA,WAAW;gBACT,eAAe,0IAAA,CAAA,UAAS,CAAC,SAAS;gBAClC,sBAAsB,CAAC,QACrB,CAAA,GAAA,2KAAA,CAAA,8BAA2B,AAAD,EAAE,UAC5B,MAAM,KAAK,CAAC,MAAM,KAAK;YAC3B;YACA,SAAS;gBACP,iBAAiB,0IAAA,CAAA,UAAS,CAAC,WAAW;YACxC;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/bhiupeshpatil/Downloads/Bhupesh/Webify/src/trpc/client.tsx"],"sourcesContent":["'use client';\n// ^-- to make sure we can mount the Provider from a server component\nimport superjson from 'superjson';\nimport type { QueryClient } from '@tanstack/react-query';\nimport { QueryClientProvider } from '@tanstack/react-query';\nimport { createTRPCClient, httpBatchLink } from '@trpc/client';\nimport { createTRPCContext } from '@trpc/tanstack-react-query';\nimport { useState } from 'react';\nimport { makeQueryClient } from './query-client';\nimport type { AppRouter } from './routers/_app';\nexport const { TRPCProvider, useTRPC } = createTRPCContext<AppRouter>();\nlet browserQueryClient: QueryClient;\nfunction getQueryClient() {\n  if (typeof window === 'undefined') {\n    // Server: always make a new query client\n    return makeQueryClient();\n  }\n  // Browser: make a new query client if we don't already have one\n  // This is very important, so we don't re-make a new client if React\n  // suspends during the initial render. This may not be needed if we\n  // have a suspense boundary BELOW the creation of the query client\n  if (!browserQueryClient) browserQueryClient = makeQueryClient();\n  return browserQueryClient;\n}\nfunction getUrl() {\n  const base = (() => {\n    if (typeof window !== 'undefined') return '';\n    // if (process.env.VERCEL_URL) return `https://${process.env.VERCEL_URL}`;\n    return process.env.NEXT_PUBLIC_API_URL;\n    \n  })();\n  return `${base}/api/trpc`;\n}\nexport function TRPCReactProvider(\n  props: Readonly<{\n    children: React.ReactNode;\n  }>,\n) {\n  // NOTE: Avoid useState when initializing the query client if you don't\n  //       have a suspense boundary between this and the code that may\n  //       suspend because React will throw away the client on the initial\n  //       render if it suspends and there is no boundary\n  const queryClient = getQueryClient();\n  const [trpcClient] = useState(() =>\n    createTRPCClient<AppRouter>({\n      links: [\n        httpBatchLink({\n          transformer: superjson,\n          url: getUrl(),\n        }),\n      ],\n    }),\n  );\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TRPCProvider trpcClient={trpcClient} queryClient={queryClient}>\n        {props.children}\n      </TRPCProvider>\n    </QueryClientProvider>\n  );\n}"],"names":[],"mappings":";;;;;;AACA,qEAAqE;AACrE;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AARA;;;;;;;;AAUO,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,sKAAA,CAAA,oBAAiB,AAAD;AACzD,IAAI;AACJ,SAAS;IACP,wCAAmC;QACjC,yCAAyC;QACzC,OAAO,CAAA,GAAA,8HAAA,CAAA,kBAAe,AAAD;IACvB;;AAOF;AACA,SAAS;IACP,MAAM,OAAO,CAAC;QACZ,uCAAmC;;QAAS;QAC5C,0EAA0E;QAC1E,OAAO,QAAQ,GAAG,CAAC,mBAAmB;IAExC,CAAC;IACD,OAAO,GAAG,KAAK,SAAS,CAAC;AAC3B;AACO,SAAS,kBACd,KAEE;IAEF,uEAAuE;IACvE,oEAAoE;IACpE,wEAAwE;IACxE,uDAAuD;IACvD,MAAM,cAAc;IACpB,MAAM,CAAC,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAC5B,CAAA,GAAA,kKAAA,CAAA,mBAAgB,AAAD,EAAa;YAC1B,OAAO;gBACL,CAAA,GAAA,sKAAA,CAAA,gBAAa,AAAD,EAAE;oBACZ,aAAa,0IAAA,CAAA,UAAS;oBACtB,KAAK;gBACP;aACD;QACH;IAEF,qBACE,8OAAC,sLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAC3B,cAAA,8OAAC;YAAa,YAAY;YAAY,aAAa;sBAChD,MAAM,QAAQ;;;;;;;;;;;AAIvB","debugId":null}}]
}