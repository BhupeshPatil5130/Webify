{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/bhiupeshpatil/Downloads/Bhupesh/Webify/src/trpc/init.ts"],"sourcesContent":["import { initTRPC } from '@trpc/server';\nimport { cache } from 'react';\nimport superjson from 'superjson';\nexport const createTRPCContext = cache(async () => {\n  /**\n   * @see: https://trpc.io/docs/server/context\n   */\n  return { userId: 'user_123' };\n});\n// Avoid exporting the entire t-object\n// since it's not very descriptive.\n// For instance, the use of a t variable\n// is common in i18n libraries.\nconst t = initTRPC.create({\n  /**\n   * @see https://trpc.io/docs/server/data-transformers\n   */\n  transformer: superjson,\n});\n// Base router and procedure helpers\nexport const createTRPCRouter = t.router;\nexport const createCallerFactory = t.createCallerFactory;\nexport const baseProcedure = t.procedure;"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AACO,MAAM,oBAAoB,CAAA,GAAA,uMAAA,CAAA,QAAK,AAAD,EAAE;IACrC;;GAEC,GACD,OAAO;QAAE,QAAQ;IAAW;AAC9B;AACA,sCAAsC;AACtC,mCAAmC;AACnC,wCAAwC;AACxC,+BAA+B;AAC/B,MAAM,IAAI,mKAAA,CAAA,WAAQ,CAAC,MAAM,CAAC;IACxB;;GAEC,GACD,aAAa,4IAAA,CAAA,UAAS;AACxB;AAEO,MAAM,mBAAmB,EAAE,MAAM;AACjC,MAAM,sBAAsB,EAAE,mBAAmB;AACjD,MAAM,gBAAgB,EAAE,SAAS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///Users/bhiupeshpatil/Downloads/Bhupesh/Webify/src/trpc/routers/_app.ts"],"sourcesContent":["import { z } from 'zod';\nimport { baseProcedure, createTRPCRouter } from '../init';\nexport const appRouter = createTRPCRouter({\n  createAI: baseProcedure\n    .input(\n      z.object({\n        text: z.string(),\n      }),\n    )\n    .query((opts) => {\n      return {\n        greeting: `hello ${opts.input.text}`,\n      };\n    }),\n});\n// export type definition of API\nexport type AppRouter = typeof appRouter;"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,MAAM,YAAY,CAAA,GAAA,qHAAA,CAAA,mBAAgB,AAAD,EAAE;IACxC,UAAU,qHAAA,CAAA,gBAAa,CACpB,KAAK,CACJ,+KAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,MAAM,+KAAA,CAAA,IAAC,CAAC,MAAM;IAChB,IAED,KAAK,CAAC,CAAC;QACN,OAAO;YACL,UAAU,CAAC,MAAM,EAAE,KAAK,KAAK,CAAC,IAAI,EAAE;QACtC;IACF;AACJ","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/bhiupeshpatil/Downloads/Bhupesh/Webify/src/app/api/trpc/%5Btrpc%5D/route.ts"],"sourcesContent":["import { fetchRequestHandler } from '@trpc/server/adapters/fetch';\nimport { createTRPCContext } from '@/trpc/init';\nimport { appRouter } from '@/trpc/routers/_app';\nconst handler = (req: Request) =>\n  fetchRequestHandler({\n    endpoint: '/api/trpc',\n    req,\n    router: appRouter,\n    createContext: createTRPCContext,\n  });\nexport { handler as GET, handler as POST };"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AACA,MAAM,UAAU,CAAC,MACf,CAAA,GAAA,yKAAA,CAAA,sBAAmB,AAAD,EAAE;QAClB,UAAU;QACV;QACA,QAAQ,gIAAA,CAAA,YAAS;QACjB,eAAe,qHAAA,CAAA,oBAAiB;IAClC","debugId":null}}]
}